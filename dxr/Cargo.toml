[package]
name = "dxr"
description = "Declarative XML-RPC"
categories = ["network-programming", "encoding"]
keywords = ["XML-RPC", "client", "server", "derive"]
exclude = ["/wip/"]

license.workspace = true
version.workspace = true
edition.workspace = true
rust-version.workspace = true
authors.workspace = true
repository.workspace = true

[[test]]
name = "derive"
path = "tests/derive.rs"
required-features = ["derive", "i8", "nil"]

[dependencies]
base64 = "0.22"
quick-xml = { version = "0.37", features = ["serialize"] }
serde = { version = "1.0.104", features = ["derive"] }
thiserror = "1.0.30"
winnow = "0.7"

# optional derive macro support
dxr_derive = { workspace = true, optional = true }

# optional datetime crate integrations
chrono = { version = "0.4", features = ["std"], default-features = false, optional = true }
jiff = { version = "0.2", default-features = false, optional = true }
time = { version = "0.3", default-features = false, optional = true }

[dev-dependencies]
chrono = { version = "0.4.19", features = ["clock", "std"], default-features = false }
quickcheck = "1.0"
quickcheck_macros = "1.0"
rustversion = "1"
trybuild = "1"

[features]
# support for derive macros
derive =["dep:dxr_derive"]

# utilities for multicall support
multicall = []

# support non-standard <i8> XML-RPC values
i8 = []

# support non-standard <nil> XML-RPC values
nil = []

[lints.rust]
explicit_outlives_requirements = "warn"
missing_copy_implementations = "warn"
missing_debug_implementations = "warn"
missing_docs = "warn"
noop_method_call = "warn"
unreachable_pub = "warn"
unsafe_code = "deny"
unused_import_braces = "warn"
unused_qualifications = "warn"

[lints.clippy]
unwrap_used = "warn"

[package.metadata.docs.rs]
all-features = true
rustdoc-args = ["--cfg", "docsrs"]
